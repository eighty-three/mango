CREATE EXTENSION IF NOT EXISTS citext;
CREATE EXTENSION IF NOT EXISTS pg_trgm;
CREATE EXTENSION IF NOT EXISTS intarray;

CREATE TABLE IF NOT EXISTS manga (
  series_id SERIAL PRIMARY KEY,
  name CITEXT NOT NULL,
  latest REAL NOT NULL,
  scraper CITEXT NOT NULL,
  link CITEXT
);

DO $$ BEGIN
  CREATE TYPE languages AS ENUM ('jp', 'kr', 'gb', 'cn', 'hk');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
  CREATE TYPE publication_status AS ENUM ('ongoing', 'complete', 'hiatus', 'cancelled');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
  CREATE TYPE reading_status AS ENUM ('dropped', 'completed', 'reading');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
  CREATE TYPE download_status AS ENUM ('complete', 'incomplete', 'none');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

CREATE TABLE IF NOT EXISTS series(
  id SERIAL PRIMARY KEY,
  title TEXT NOT NULL,
  description TEXT NOT NULL DEFAULT '',
  author INT [] NOT NULL,
  artist INT [] NOT NULL,
  tags INT [],
  md_id INT NOT NULL UNIQUE,
  mu_id INT,
  mal_id INT,
  language languages NOT NULL,
  publication publication_status NOT NULL,
  reading reading_status,
  downloaded download_status,
  from_md BOOLEAN NOT NULL DEFAULT TRUE,
  notes TEXT NOT NULL DEFAULT ''
);
CREATE INDEX IF NOT EXISTS idx_series_author ON series USING GIN (author gin__int_ops);
CREATE INDEX IF NOT EXISTS idx_series_artist ON series USING GIN (artist gin__int_ops);
CREATE INDEX IF NOT EXISTS idx_series_language ON series(language);
CREATE INDEX IF NOT EXISTS idx_series_publication ON series(publication);
CREATE INDEX IF NOT EXISTS idx_series_reading ON series(reading);
CREATE INDEX IF NOT EXISTS idx_series_downloaded ON series(downloaded);
CREATE INDEX IF NOT EXISTS idx_series_from_md ON series(from_md);
CREATE INDEX IF NOT EXISTS idx_series_notes ON series(notes) WHERE notes != '';

CREATE TABLE IF NOT EXISTS authors (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL UNIQUE
);
CREATE INDEX IF NOT EXISTS idx_authors_name ON authors USING GIN (name gin_trgm_ops);

CREATE TABLE IF NOT EXISTS artists (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL UNIQUE
);
CREATE INDEX IF NOT EXISTS idx_artists_name ON artists USING GIN (name gin_trgm_ops);

CREATE TABLE IF NOT EXISTS tags (
  id SERIAL PRIMARY KEY,
  tag TEXT NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS titles (
  id SERIAL PRIMARY KEY,
  md_id INT REFERENCES series(md_id) ON DELETE CASCADE NOT NULL,
  name TEXT NOT NULL
);
CREATE INDEX IF NOT EXISTS idx_titles_md_id ON titles(md_id);
CREATE INDEX IF NOT EXISTS idx_titles_name ON titles USING GIN (name gin_trgm_ops);

CREATE TABLE IF NOT EXISTS relations (
  relation_id SERIAL PRIMARY KEY,
  id INT NOT NULL,
  parent_id INT REFERENCES series(md_id) ON DELETE CASCADE NOT NULL,
  title CITEXT NOT NULL,
  type INT NOT NULL
);
CREATE INDEX IF NOT EXISTS idx_relations_parent_id ON relations(parent_id);

CREATE TABLE IF NOT EXISTS authors_series (
  id INT REFERENCES authors(id) NOT NULL,
  md_id INT REFERENCES series(md_id) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (id, md_id)
);

CREATE TABLE IF NOT EXISTS artists_series (
  id INT REFERENCES artists(id) NOT NULL,
  md_id INT REFERENCES series(md_id) ON DELETE CASCADE NOT NULL,
  PRIMARY KEY (id, md_id)
);
